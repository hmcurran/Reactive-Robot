/* --------------------------------------------------------
 *  Team: Groovy Gals
 *  Names: Hannah Curran, Grace Geer, Madi Heath, and Kaitlyn Hyunh
 *  Title: Reactive Robot Code
 *  Date: April 8, 2021
 *  Description: This is the code that controls our robot.
 *  Resources/Help:
 *  - LCD Display: https://www.arduino.cc/en/Tutorial/LibraryExamples/HelloWorld
 *                 https://howtomechatronics.com/tutorials/arduino/lcd-tutorial/
 *                 https://highvoltages.co/tutorial/arduino-tutorial/arduino-lcd-interfacing-without-potentiometer/#:~:text=The%20LCD%20interfacing%20requires%20a,with%20Arduino%20and%20without%20potentiometer
 * - Mii Channel Song: https://github.com/robsoncouto/arduino-songs/blob/master/miichannel/miichannel.ino
 * - DHT Sensor: https://www.instructables.com/How-to-use-DHT-22-sensor-Arduino-Tutorial/
 * - Temperature Conversion Equation:  https://www.thegeekpub.com/240906/arduino-celsius-to-fahrenheit-conversion/
 * - Circuit for Sensor and Buzzer: https://create.arduino.cc/projecthub/icstation-team/diy-temperature-humidity-smoke-detector-alarm-system-bas-5039f7

------------------------------------------------------------*/

// INSTALL LIBRARIES
#include <LiquidCrystal.h>    // Initialize the LCD library
#include <DHT.h>              // Initialize DHT sensor library
#include "Bytes.h"            // Include file containing characters for LCD
#define DHTPIN 6              // Pin DHT is connected to
#define DHTTYPE DHT22         // Define DHT 22  (AM2302)
DHT dht(DHTPIN, DHTTYPE);     // Initialize DHT sensor for normal 16mhz Arduino


// INITIALIZE VARIABLES AND DEFINE CONSTANTS
LiquidCrystal lcd(0, 1, 8, 9, 10, 11); // Register select pin, enable pin, D4 pin, D5 pin, D6 pin, D7 pin on LCD connected to pins 0, 1, 8, 9, 10, and 11 on arduino
int chk;
float hum;                            // Stores humidity value
float temp;                           // Stores temperature value
bool play = false;                    // Boolean value that controls buzzer
int buzzer = 7;                       // Buzzer to pin 7
const int blueLedPin = 2;             // Blue LED to pin 2
const int greenLedPin = 3;            // Green LED to pin 3
const int redLedPin = 4;              // Red LED to pin 4
float faren;                          // Create float for faren variable
int currentState = -1;                // Variable for current state of robot (0 = cold, 1 = normal, 2 = hot
int previousState;                    // Variable for previous state of robot = -1 (0 = cold, 1 = normal, 2 = hot)
int counter = 0;                      // Counter variable


void setup() {
  pinMode(blueLedPin, OUTPUT);  // Set all LED pins as output pins
  pinMode(greenLedPin, OUTPUT);
  pinMode(redLedPin, OUTPUT);

  lcd.begin(16, 2); // Set up lcd screen dimensions
  // Create characters for lcd (num, name)
  lcd.createChar(0, Lface);
  lcd.createChar(1, Leye);
  lcd.createChar(2, Lbrow);
  lcd.createChar(3, sad);
  lcd.createChar(4, Rbrow);
  lcd.createChar(5, Reye);
  lcd.createChar(6, Rface);
  lcd.createChar(7, happy);
  lcd.home();


  //Serial.begin(9600); // Not needed for running code, uncomment if you want to print values to serial monitor
  dht.begin();

}

void loop(){
    // Read data and store it to variables hum and temp, create faren variable to convert from C to F
    hum = dht.readHumidity();
    temp = dht.readTemperature();
    faren = (temp * 1.8) + 32;


    // Use if/else statements to define the 3 states (cold, normal, and hot)
    if(faren <= 65.99){                         // If temperature is 65.99 F or below...
      currentState = 0;                         // Set the current state to 0
      stateCompare();                           // Run state compare function
      cold();                                   // Run cold function
    }

    else if(faren <= 79.99 && faren >= 66){     // If temperature is between 66 and 79.99 F...
      currentState = 1;                         // Set the current state to 1
      stateCompare();                           // Run state compare function
      normal();                                 // Run normal function
    }

    else{                                       // If temperature is between 80 F and above...
      currentState = 2;                         // Set the current state to 2
      stateCompare();                           // Run state compare function
      hot();                                    // Run hot function
    }
}

// Create a function that compares the current and previous states
void stateCompare(){
  if(currentState != -1){                       // If currentstate doesn't equal -1...
    previousState = currentState;               // Set the previous state to the current state
  }
  
  counterCheck();                               // Run countercheck function
}


// Create a function that runs the counter
void counterCheck(){
  if(currentState == previousState){            // If current state equals previous state...
    counter++;                                  // Increment the counter
  }
  
  else{                                         // Otherwise...
    counter = 0;                                // Reset the counter to 0
  }
}

   
// Print temp and humidity values to serial monitor
    // Not needed for running code! Just uncomment if you want to see values in serial monitor.
    /*Serial.println(F("Humidity: "));
    Serial.println(hum);
    Serial.println(F(" %, Temp: "));
    Serial.println(temp);
    Serial.println(F(" Celsius"));
    Serial.println(faren);
    Serial.println(F(" Farenheit"));
    delay(2000); //Delay 2 sec.*/
  

// Create a function to define the cold state
void cold(){
  // Turn on and off blue LED
  digitalWrite(blueLedPin, HIGH);
  delay(1000);
  digitalWrite(blueLedPin, LOW);
  delay(1000);
  digitalWrite(blueLedPin, HIGH);                    
  delay(1000);
  digitalWrite(blueLedPin, LOW);
  delay(1000);
  digitalWrite(blueLedPin, HIGH);                    
  delay(1000);
  digitalWrite(blueLedPin, LOW);

  // Draw a sleepy face on the LCD
  lcd.setCursor(5,0); // Centers cursor
  lcd.print("(-_-)"); // Prints sleepy face
  
  lcd.setCursor(2,1); // Will move the cursor to the second line

  // Print temperature in F on LCD
  lcd.print("Temp: ");
  lcd.print(faren);
  lcd.print("F");

  // If counter is less than 6, play a sad tone
  if(counter < 6) {
    tone(buzzer, 400, 500);
    delay(500);
    tone(buzzer, 200, 500);
    delay(500);
  }  
      
  else {
    noTone(7);
  }
}


// Create a function to define the normal state
void normal(){
  // Turn on and off green LED
  digitalWrite(greenLedPin, HIGH);
  delay(500);
  digitalWrite(greenLedPin, LOW);
  delay(500);
  digitalWrite(greenLedPin, HIGH);                    
  delay(500);
  digitalWrite(greenLedPin, LOW);
  delay(500);
  digitalWrite(greenLedPin, HIGH);                    
  delay(500);
  digitalWrite(greenLedPin, LOW);

  // Draw a happy face on the LCD
  lcd.setCursor(5,0); // Centers cursor
  lcd.write(byte(0)); // L face
  lcd.write(byte(5)); // Eye
  lcd.write(byte(7)); // Mouth
  lcd.write(byte(1)); // Eye
  lcd.write(byte(6)); // R face
  
  lcd.setCursor(2,1); // Will move the cursor to the second line

  // Print temperature in F on LCD
  lcd.print("Temp: ");
  lcd.print(faren);
  lcd.print("F");

  // If counter is less than 6, play a happy tone
  if(counter < 6) {
    tone(buzzer, 700, 400);
    delay(500);
    tone(buzzer, 900, 500);
    delay(500);
   }
          
   else {
    noTone(7);
   }   
}


// Create a function that defines the hot state
void hot(){
  // Turn on and off red LED
  digitalWrite(redLedPin, HIGH);
  delay(250);
  digitalWrite(redLedPin, LOW);
  delay(250);
  digitalWrite(redLedPin, HIGH);                    
  delay(250);
  digitalWrite(redLedPin, LOW);
  delay(250);
  digitalWrite(redLedPin, HIGH);                    
  delay(250);
  digitalWrite(redLedPin, LOW);
  delay(250);
    
  // Draw a mad face on the LCD
  lcd.setCursor(4,0); // Centers cursor
  lcd.write(byte(0)); // L face
  lcd.write(byte(1)); // Eye
  lcd.write(byte(2)); // L eyebrow
  lcd.write(byte(3)); // Mouth
  lcd.write(byte(4)); // R eyebrow
  lcd.write(byte(5)); // Eye
  lcd.write(byte(6)); // R face
  
  lcd.setCursor(2,1); // Will move the cursor to the second line

  // Print temperature in F on LCD
  lcd.print("Temp: "); 
  lcd.print(faren);
  lcd.print("F");

  // If counter is less than 6, play a mad tone
  if(counter < 6) {
    tone(buzzer, 400, 500);
    delay(500);
    tone(buzzer, 600, 500);
    delay(500);
  }   
     
  else {
    noTone(7);
  }
}
